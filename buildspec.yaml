version: 0.2

env:
  variables:
    DOTNET_VERSION: 8.0
    SONAR_TOKEN: "b183fb6f93db8c01e2afaff7be009c1386c34b40"
    SONAR_PROJECT_KEY: "Prashanthsraju14_testapi"
    SONAR_ORGANIZATION: "prashanthsraju14"
    SONAR_HOST_URL: "https://sonarcloud.io"

phases:
  install:
    runtime-versions:
      dotnet: $DOTNET_VERSION
    commands:
      - echo "📦 Installing dotnet tools..."
      - export HOME=/root
      - export PATH="$HOME/.dotnet/tools:$PATH"
      - dotnet tool install --global dotnet-sonarscanner
      - dotnet tool install --global dotnet-reportgenerator-globaltool
      - echo "📁 Restoring dependencies..."
      - dotnet restore

  pre_build:
    commands:
      - echo "🔍 Starting SonarCloud analysis..."
      - dotnet sonarscanner begin "/k:$SONAR_PROJECT_KEY" "/o:$SONAR_ORGANIZATION" "/d:sonar.token=$SONAR_TOKEN" "/d:sonar.host.url=$SONAR_HOST_URL" "/d:sonar.cs.cobertura.reportsPaths=coverage-report/coverage.cobertura.xml"

  build:
    commands:
      - echo "🛠️ Building the project..."
      - dotnet build --no-restore --configuration Release

      - echo "🧪 Running tests with coverage..."
      - dotnet test ./TestApi.Tests/ --no-build --configuration Release --collect:"XPlat Code Coverage" --results-directory coverage

      - echo "📊 Converting coverage to Cobertura format..."
      - reportgenerator -reports:"coverage/**/coverage.cobertura.xml" -targetdir:"coverage-report" -reporttypes:"Cobertura;Html"

      - echo "🔎 Checking if coverage file exists:"
      - find coverage-report -name "coverage.cobertura.xml"

      - echo "✅ Completing SonarCloud analysis..."
      - dotnet sonarscanner end "/d:sonar.token=$SONAR_TOKEN"

  post_build:
    commands:
      - echo "🚀 Publishing app..."
      - dotnet publish ./TestApi/TestApi.csproj -c Release -o out
      - chmod +x deploy-scripts/*.sh
      - echo "📦 Build complete. Artifacts are ready."

artifacts:
  files:
    - appspec.yaml
    - deploy-scripts/**
    - systemd/**
    - out/**/*
    - coverage-report/**
    - coverage-report/index.html
